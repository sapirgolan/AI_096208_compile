//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.08 at 11:14:57 PM EEST 
//


package com.technion.ai.dao;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Name"/>
 *         &lt;element ref="{}Types"/>
 *         &lt;element ref="{}Predicat" maxOccurs="unbounded"/>
 *         &lt;element ref="{}Action" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "name",
    "types",
    "predicat",
    "action"
})
@XmlRootElement(name = "Domain")
public class Domain {

    @XmlElement(name = "Name", required = true)
    protected String name;
    @XmlElement(name = "Types", required = true)
    protected Types types;
    @XmlElement(name = "Predicat", required = true)
    protected List<Predicat> predicat;
    @XmlElement(name = "Action", required = true)
    protected List<Action> action;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the types property.
     * 
     * @return
     *     possible object is
     *     {@link Types }
     *     
     */
    public Types getTypes() {
        return types;
    }

    /**
     * Sets the value of the types property.
     * 
     * @param value
     *     allowed object is
     *     {@link Types }
     *     
     */
    public void setTypes(Types value) {
        this.types = value;
    }

    /**
     * Gets the value of the predicat property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the predicat property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPredicat().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Predicat }
     * 
     * 
     */
    public List<Predicat> getPredicat() {
        if (predicat == null) {
            predicat = new ArrayList<Predicat>();
        }
        return this.predicat;
    }

    /**
     * Gets the value of the action property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the action property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAction().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Action }
     * 
     * 
     */
    public List<Action> getAction() {
        if (action == null) {
            action = new ArrayList<Action>();
        }
        return this.action;
    }

	public int getEffectsNumber() {
		int effectValue = 0;
		List<Action> actionList = this.getAction();
		for (Action action : actionList) {
			List<Effect> effectList = action.getEffect();
			for (Effect effect : effectList) {
				effectValue = Math.max(effectValue, effect.getFValue());
			}
		}
		return effectValue;
	}

}
